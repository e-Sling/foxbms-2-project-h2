Starting with this release, |foxbms| now supports the ADI ADES1830 AFE.

This release updates the unit testing framework ``Ceedling`` to
``0.32.0-52ba9d2`` and requires an update of Ruby.
To update Ruby and the required |ruby-gems| see :ref:`SOFTWARE_INSTALLATION`.
For information on the unit testing framework see (:ref:`UNIT_TESTS`).

Added
=====

- Support for the ADI ADES1830 AFE (see :ref:`ADI_ADES1830`).
- The GUI now also displays the *BMS state*.
- Documentation of the precharging process (:ref:`PRECHARGING`).
- The temperature sensor Vishay NTCLE413E2103F102L has been implemented.
- A logging file is created in a post-build process that shows the stack
  consumption of each function.
  This file is created in the variant build directory
  (``build/bin/foxbms.stacks.json``).
- Clamp 15 wake-up behavior. The BMS is now correctly switched on/off,
  depending on clamp 15 signal. However, resistor R1101 *MUST* not be populated
  to correctly work and currently only MCU SBC is switched off.
- Added dummy AFE implementation to enable a future support of TI AFEs.
- Add a README.md that explains the AFE implementation for the  TI AFEs.
  The README.md is found at ``src/app/driver/afe/ti/README.md``.
- The git commit hash can now be requested and transmitted via CAN.
- Added a driver for the HONEYWELL BAS6C-X00 aerosol sensor.
- The unit testing framework is now supported on Linux
  (see :ref:`linux_specific_usage`).

Changed
=======

- Updated to ``Ceedling`` 0.32.2-86f6b27.
- The default behavior in FreeRTOS is now to check for stack overflows.
  The type of checking has been set to variant ``2``.
  See https://www.freertos.org/Stacks-and-stack-overflow-checking.html for the
  FreeRTOS internal details.
- The function ``FTSK_InitializeUserCodeEngine`` used an outdated enum value
  to check for a correct startup.
  As the outdated enum was still defined in the HAL (generated by HALCoGen)
  this did not lead to an error.
- Split SOX database entries into dedicated SOC, SOH and SOE database entries.
- Improved code quality of the unit tests (``tests/unit``).
- The unit tests are now compiled more strictly with respect to warnings
  (``-Wall``, ``-Wextra``, ``-Werror``), are required to be strictly ISO C
  conforming (``-pedantic``).
  Furthermore the unit test are now compiled with the correct C standard
  version (``std=c11``).
- Improved assertions for invalid CAN configurations.
- Improved code organization and style guide conformance of the NXP MC33775A
  driver (:ref:`NXP_MC33775A`).
- Added check for successful transmission of CAN messages and try to resend
  them if transmission failed.
- The rules file must be sorted.
- Fixed several Axivion findings.
- Removed the Axivion compiler workaround for ``_Imaginary`` as this is
  supported since Axivion 7.5.2 (which is the current |foxbms| default
  configuration).
- Lauterbach debugger configuration:

  - The automatically created Lauterbach configuration now loads the symbol
    table of default binary (``build/bin/foxbms.elf``) automatically on
    startup.
  - The script file that contains list of macros and their values is
    automatically load on debugger startup.
    This script is created based on the compiler output files
    (``build/bin/**/*.ppm``) and the configuration script in
    ``tools/debugger/lauterbach/load_macro_values.cmm.in``.
    To recreate this table after a new build the
    ``tools\debugger\lauterbach\get_macro_values.py`` script needs to be run.
    After that, the created file needs to be loaded again in the Lauterbach
    command line by ``do <path/to/repo>/build/load_macro_values.cmm``.
  - Disabled configuration for Trace32 python API in file
    ``tools/debugger/lauterbach/config.t32.cmm.in``.

- Renamed driver for *Murata NCU15XH103F6Sxx* temperature sensor to
  *NCxxxXH103* as the temperature characteristic is identical for multiple
  sensors
- Renamed define ``BS_NR_OF_PARALLEL_CELLS_PER_MODULE`` to
  ``BS_NR_OF_PARALLEL_CELLS_PER_CELL_BLOCK``
- Changed database definition in struct ``DATA_BLOCK_CELL_VOLTAGE_s`` for
  ``cellVoltage_mV`` from a two-dimensional array
  (``cellVoltage_mV[BS_NR_OF_STRINGS][BS_NR_OF_CELL_BLOCKS_PER_STRING]``) to
  three-dimensional array
  (``cellVoltage_mV[BS_NR_OF_STRINGS][BS_NR_OF_MODULES_PER_STRING][BS_NR_OF_CELL_BLOCKS_PER_MODULE]``)

Deprecated
==========

Removed
=======

- Removed unused empty files from the repository.

Fixed
=====

- Fixed a bug in MRC module that string power was not calculated correctly.
- Fixed a bug that precharging the battery system has been re-tried for an
  infinite number of tries regardless of the configuration of
  ``BMS_PRECHARGE_TRIES``.
- Fixed a bug in CAN module that periodic messages would not be sent correctly
  after the BMS had been running continuously for 50 days.
- Fixed a bug that stack size for I2C and AFE tasks were sized incorrectly.
  They were defined as words, whereas the define states a stack size in byte.
  This lead to stack overflows for some configurations.
- ``BS_NR_OF_PARALLEL_CELLS_PER_CELL_BLOCK`` is now considered calculating the
  allowed continuous current limits.
